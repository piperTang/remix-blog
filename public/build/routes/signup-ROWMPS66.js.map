{
  "version": 3,
  "sources": ["../../../app/routes/signup.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\signup.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\signup.tsx\");\n  import.meta.hot.lastModified = \"1721045542291.1772\";\n}\n// REMIX HMR END\n\nimport { Button, Input } from \"@nextui-org/react\";\nimport { Form } from \"@remix-run/react\";\nimport { prisma } from \"~/prisma.server\";\nimport { redirect } from \"@remix-run/node\";\nexport const action = async c => {\n  const formData = await c.request.formData();\n  const username = formData.get(\"username\");\n  const password = formData.get(\"password\");\n  await prisma.user.create({\n    data: {\n      username: username,\n      password: password\n    }\n  });\n  return redirect(\"/signin\");\n};\nexport default function Page() {\n  return <Form method=\"POST\">\r\n      <div className=\"p-12 flex flex-col gap-3\">\r\n        <Input label=\"\u7528\u6237\u540D\" name=\"username\" />\r\n        <Input type=\"password\" label=\"\u5BC6\u7801\" name=\"password\" />\r\n        <Button type=\"submit\" color=\"primary\">\r\n          \u6CE8\u518C\r\n        </Button>\r\n      </div>\r\n    </Form>;\n}\n_c = Page;\nvar _c;\n$RefreshReg$(_c, \"Page\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsBA,oBAAuB;AACvB,kBAAyB;AAgBjB;AAtCR,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,kCAAoC,EAAE;AAAA,EAC/E;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAON,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAyB;AACzB,cAAY,IAAI,eAAe;AACjC;AAmBe,SAAR,OAAwB;AAC7B,SAAO,mDAAC,QAAK,QAAO,QAChB,6DAAC,SAAI,WAAU,4BACb;AAAA,uDAAC,iBAAM,OAAM,sBAAM,MAAK,cAAxB;AAAA;AAAA;AAAA;AAAA,WAAmC;AAAA,IACnC,mDAAC,iBAAM,MAAK,YAAW,OAAM,gBAAK,MAAK,cAAvC;AAAA;AAAA;AAAA;AAAA,WAAkD;AAAA,IAClD,mDAAC,kBAAO,MAAK,UAAS,OAAM,WAAU,4BAAtC;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,OALF;AAAA;AAAA;AAAA;AAAA,SAMA,KAPG;AAAA;AAAA;AAAA;AAAA,SAQL;AACJ;AACA,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,MAAM;AAEvB,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
