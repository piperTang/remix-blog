{
  "version": 3,
  "sources": ["../../../app/routes/posts.new.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\posts.new.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\posts.new.tsx\");\n  import.meta.hot.lastModified = \"1721027737051.908\";\n}\n// REMIX HMR END\n\nimport { Button, Input, Textarea } from \"@nextui-org/react\";\nimport { redirect } from \"@remix-run/node\";\nimport { Form } from \"@remix-run/react\";\nimport { prisma } from \"~/prisma.server\";\nimport { json } from \"@remix-run/react\";\nimport { useActionData } from \"@remix-run/react\";\nimport { useNavigation } from \"@remix-run/react\";\nexport const action = async c => {\n  // \u4F7F\u7528 `formData()` \u83B7\u53D6\u8868\u5355\u6570\u636E\n  const formData = await c.request.formData();\n  const slug = formData.get('slug');\n  const title = formData.get(\"title\");\n  const content = formData.get(\"content\");\n  if (!slug) {\n    return json({\n      success: false,\n      errors: {\n        slug: \"\u5FC5\u987B\u586B\u5199 slug\",\n        title: \"\",\n        content: \"\"\n      }\n    });\n  }\n  if (!title) {\n    return json({\n      success: false,\n      errors: {\n        slug: \"\",\n        title: \"\u5FC5\u987B\u586B\u5199\u6807\u9898\",\n        content: \"\"\n      }\n    });\n  }\n  if (!content) {\n    return json({\n      success: false,\n      errors: {\n        slug: \"\",\n        title: \"\",\n        content: \"\u5FC5\u987B\u586B\u5199\u5185\u5BB9\"\n      }\n    });\n  }\n  // \u5728\u6570\u636E\u5E93\u521B\u5EFA\u8BB0\u5F55\n  await prisma.post.create({\n    data: {\n      id: slug,\n      title,\n      content\n    }\n  });\n\n  // \u6210\u529F\u540E\u8DF3\u8F6C\u5230\u9996\u9875\n  return redirect(\"/\");\n};\nexport default function Page() {\n  _s();\n  const actionData = useActionData();\n  const errors = actionData?.errors;\n  const navigation = useNavigation();\n  return <div>\r\n      <Form method=\"post\">\r\n      <div className=\"flex flex-col gap-3 p-12\">\r\n        <h1 className=\"text-xl font-black\">\u53D1\u5E03\u6587\u7AE0</h1>\r\n        <Input isInvalid={!!errors?.slug} errorMessage={errors?.slug} name=\"slug\" label=\"slug\" />\r\n        <Input isInvalid={!!errors?.title} errorMessage={errors?.title} name=\"title\" label=\"\u6587\u7AE0\u6807\u9898\" />\r\n        <Textarea isInvalid={!!errors?.content} errorMessage={errors?.content} name=\"content\" label=\"\u5185\u5BB9\" />\r\n        <Button isLoading={navigation.state === 'submitting'} type=\"submit\" color=\"primary\">\r\n          \u53D1\u5E03\r\n        </Button>\r\n      </div>\r\n      </Form>\r\n    </div>;\n}\n_s(Page, \"e3rMULficn7ldQYYArv00m53mwQ=\", false, function () {\n  return [useActionData, useNavigation];\n});\n_c = Page;\nvar _c;\n$RefreshReg$(_c, \"Page\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsBA,kBAAyB;AAEzB,oBAAuB;AA4Df;AAnFR,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,qCAAuC,EAAE;AAAA,EAClF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA4B;AAC5B,cAAY,IAAI,eAAe;AACjC;AA0De,SAAR,OAAwB;AAC7B,KAAG;AACH,QAAM,aAAa,cAAc;AACjC,QAAM,SAAS,YAAY;AAC3B,QAAM,aAAa,cAAc;AACjC,SAAO,mDAAC,SACJ,6DAAC,QAAK,QAAO,QACb,6DAAC,SAAI,WAAU,4BACb;AAAA,uDAAC,QAAG,WAAU,sBAAqB,wCAAnC;AAAA;AAAA;AAAA;AAAA,WAAuC;AAAA,IACvC,mDAAC,iBAAM,WAAW,CAAC,CAAC,QAAQ,MAAM,cAAc,QAAQ,MAAM,MAAK,QAAO,OAAM,UAAhF;AAAA;AAAA;AAAA;AAAA,WAAuF;AAAA,IACvF,mDAAC,iBAAM,WAAW,CAAC,CAAC,QAAQ,OAAO,cAAc,QAAQ,OAAO,MAAK,SAAQ,OAAM,8BAAnF;AAAA;AAAA;AAAA;AAAA,WAA0F;AAAA,IAC1F,mDAAC,oBAAS,WAAW,CAAC,CAAC,QAAQ,SAAS,cAAc,QAAQ,SAAS,MAAK,WAAU,OAAM,kBAA5F;AAAA;AAAA;AAAA;AAAA,WAAiG;AAAA,IACjG,mDAAC,kBAAO,WAAW,WAAW,UAAU,cAAc,MAAK,UAAS,OAAM,WAAU,4BAApF;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,OAPF;AAAA;AAAA;AAAA;AAAA,SAQA,KATA;AAAA;AAAA;AAAA;AAAA,SAUA,KAXG;AAAA;AAAA;AAAA;AAAA,SAYL;AACJ;AACA,GAAG,MAAM,gCAAgC,OAAO,WAAY;AAC1D,SAAO,CAAC,eAAe,aAAa;AACtC,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,MAAM;AAEvB,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
